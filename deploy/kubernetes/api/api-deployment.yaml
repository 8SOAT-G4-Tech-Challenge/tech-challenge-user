apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-tech-challenge-user
  namespace: tech-challenge-group-4
  labels:
    app: api-tech-challenge-user
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: api-tech-challenge-user
  template:
    metadata:
      name: api-tech-challenge-user
      labels:
        app: api-tech-challenge-user
    spec:
      containers:
        - name: api-tech-challenge-user-container
          image: lucasaccurcio/tech-challenge-user-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3333
          envFrom:
            - configMapRef:
                name: env-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: DATABASE_URL
              value: 'postgresql://postgres:$(POSTGRES_PASSWORD)@postgres-service:5433/tech-challenge-user'
          livenessProbe:
            httpGet:
              path: /docs
              port: 3334
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /docs
              port: 3334
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
