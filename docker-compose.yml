version: '3.8'

services:
  postgres-sso:
    container_name: tech-challenge-sso-postgres
    image: postgres
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: tech-challenge-sso
      PGDATA: '/var/lib/postgresql/data'
    volumes:
      - postgres-data-sso:/var/lib/postgresql/data
    networks:
      - tech-challenge-sso-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    container_name: tech-challenge-sso-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3334:3334'
      - '5556:5556'
    env_file: .env
    depends_on:
      postgres-sso:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      API_PORT: 3334
    networks:
      - tech-challenge-sso-network
      - tech-challenge-global

  redis:
    container_name: tech-challenge-sso-redis
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      - tech-challenge-sso-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  tech-challenge-sso-network:
    driver: bridge
  tech-challenge-global:
    external: true

volumes:
  postgres-data-sso:
